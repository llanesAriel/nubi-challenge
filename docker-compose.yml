services:
  db:
    image: postgres:17
    restart: unless-stopped
    volumes:
      - ./docker/db-init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d db -U test_user"]
      interval: 2s
      timeout: 2s
      retries: 15
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.local
    ports:
      - "8000:8000"
    environment:
      - API_KEY=secret123
      - DATABASE_URL=postgresql+psycopg://test_user:test_password@db:5432/db
      - REPOSITORY_TYPE=pgsql
      - ENV=development
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src/app:/var/www/app
    restart: unless-stopped

  test:
    build: .
    environment:
      - API_KEY=secret123
      - DATABASE_URL=postgresql+psycopg://test_user:test_password@db:5432/test_db
      - PYTHONPATH=/var/www
      - ENV=test
    volumes:
      - ./src/app:/var/www/app
      - ./src/tests:/var/www/tests
      - ./pyproject.toml:/var/www/pyproject.toml
    working_dir: /var/www/
    restart: "no"
    entrypoint: []
    profiles: ["test"]
    command: pytest tests -v
volumes:
  postgres_data:
